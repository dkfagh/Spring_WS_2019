<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<%@ taglib uri="http://java.sun.com/jsp/jstl/core" prefix="c" %>
<%@ taglib uri="http://java.sun.com/jsp/jstl/fmt" prefix="fmt" %>
<%@ taglib uri="http://www.springframework.org/security/tags" prefix="sec" %>
    
<%@include file="../includes/header.jsp" %>

<style>

.uploadResult { width:100%;
				border: 1px solid lightgray;
				border-radius: 5px;
}

.uploadResult ul{ display:flex;
				  flex-flow:row;
				  justify-content:center;
				  align-items:center;
}

.uploadResult ul li{list-style:none;
					padding:10px;
}

.uploadResult ul li img{width:100px;
}

.uploadResult ul li span {color:gray;
}

.bigPictureWrapper {position:absolute;
					display:none;
					justify-content:center;
					align-items:center;
					top:0;
					width:100%;
					height:100%;
					background-color:gray;
					z-index:100;
					background:rgba(0, 0, 0, 0.5);
}

.bigPicture {position:relative;
			 display:flex;
			 justify-content:center;
			 align-items:center;
}

.bigPicture img {width:100%;
}

</style>


        <!-- Begin Page Content -->
        <div class="container-fluid">

          <!-- Page Heading -->
          <h1 class="h3 mb-2 text-gray-800">Board</h1>

          <!-- DataTales Example -->
          <div class="card shadow mb-4">
            <div class="card-header py-3">
              <h4 class="m-0 font-weight-bold text-primary">Read</h4>
              
              
              
            </div>
            <div class="card-body">
		            <div class="form-group">
						<label>Bno</label> 
						<input class="form-control" name="bno" value='<c:out value="${board.bno}"/>' readonly="readonly">
					</div>
            
					<div class="form-group">
						<label>Title</label> 
						<input class="form-control" name="title" value='<c:out value="${board.title}"/>' readonly="readonly">
					</div>
					
					<div class="form-group">
						<label>Content</label>
						<textarea class="form-control" rows="10" name='content' readonly="readonly"><c:out value="${board.content}"/></textarea>
					</div>
					
					<div class="form-group">
						<label>Writer</label> 
						<input class="form-control" name='writer' value='<c:out value="${board.writer}"/>' readonly="readonly">
					</div>
					
					<div class="form-group">
						<label>Files</label>
        				<div class="uploadResult">
        					<ul>
        					</ul>
        				</div>
        			</div>
        			        			
					
			          <form id='operForm' action="/board/modify" method="get">
			          	<input type="hidden" id="bno" name="bno" value="${board.bno}">
			          	<input type="hidden" name="pageNum" value="${cri.pageNum}">
			          	<input type="hidden" name="amount" value="${cri.amount}">
			          	<input type="hidden" name="keyword" value="${cri.keyword}">
			          	<input type="hidden" name="type" value="${cri.type}">
			          	
			          	<sec:authentication property="principal" var="pinfo" />
			          	
			          		<sec:authorize access="isAuthenticated()">
			          			<c:if test="${pinfo.username eq board.writer }">
			          				<button data-oper='modify' class="btn btn-primary btn-sm">Modify</button>
			          				<button data-oper="remove" class="btn btn-danger btn-sm">Remove</button>
			          			</c:if>
			          		</sec:authorize>
			          	
						<button data-oper='list' class="btn btn-primary btn-sm">List</button>
			          </form>				
					
					<%-- <a class="btn btn-primary btn-sm" href="/board/modify?bno=${board.bno}">Modify</a>
					<a class="btn btn-primary btn-sm" href="/board/remove?bno=${board.bno}" method="post">Remove</a>
					<a class="btn btn-primary btn-sm" href="/board/list">List</a> --%>
					
					
            </div>
          </div>
          
        </div>
        <!-- /.container-fluid -->
        
        
        <!-- 댓글 --------------------------------------------------------------------------------------------------------------------------------->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
              <i class="fa fa-comments fa-fw"></i> Reply
	       		<sec:authorize access="isAuthenticated()">
	       			<button id='addReplyBtn' class='btn btn-primary btn-sm float-right'>New Reply</button>  
	       		</sec:authorize>
            </div>
            
            <div class="card-body">
            	<ul class="chat list-group">            		
            	</ul>
            </div>
            
            <div class="card-footer">
            </div>
          </div>
          <!-- 댓글 ---------------------------------->
          
          <!-- Modal 추가 -------------------------------------------------------------------------------------------------------------->
                
                <!-- The Modal -->
				<div class="modal" id="myModal">
				  <div class="modal-dialog">
				    <div class="modal-content">
				
				      <!-- Modal Header -->
				      <div class="modal-header">
				        <h4 class="modal-title">REPLY MODAL</h4>
				        <!-- <button type="button" class="close" data-dismiss="modal">&times;</button> -->
				      </div>
				
				      <!-- Modal body -->
				      <div class="modal-body">
				       	<div class="form-group">
				       		<label>Reply</label>
				       		<input class="form-control" name="reply" value="New Reply!">
				       	</div>
				       	<div class="form-group">
				       		<label>Replyer</label>
				       		<input class="form-control" name="replyer" value="replyer">
				       	</div>
				       	<div class="form-group">
				       		<label>Reply Date</label>
				       		<input class="form-control" name="replyDate" value="">
				       	</div>
				      </div>
				
				      <!-- Modal footer -->
				      <div class="modal-footer">
				        <button type="button" class="btn btn-warning" id='modalModBtn'>Modify</button>
				        <button type="button" class="btn btn-danger" id='modalRemoveBtn'>Remove</button>
				        <button type="button" class="btn btn-primary" id='modalRegisterBtn'>Register</button>
				        <button type="button" class="btn btn-default" data-dismiss="modal" id='modalCloseBtn'>Close</button>
				      </div>
				
				    </div>
				  </div>
				</div>
                
                <!-- Modal 추가 끝 -------------------->

<%@ include file="../includes/footer.jsp" %>

<script src="/resources/js/reply.js"></script>

<script>
$(document).ready(function() {	
	
	// 익명함수 정의와 동시에 호출
	(function(){
		
		var bno = '<c:out value="${board.bno}"/>';
		
		$.getJSON("/board/getAttachList", {bno: bno}, function(arr){
			
			console.log(arr);
			
			var str = "";
			
			$(arr).each(function(i, attach) {
				
				// image type
				if(attach.fileType) {
					
					var fileCallPath = encodeURIComponent(attach.uploadPath + "/s_" + attach.uuid + "_" + attach.fileName);
					
					str += "<li style='cursor:pointer' data-path='" + attach.uploadPath + "' data-uuid='" + attach.uuid + "' data-filename='" + attach.fileName + "' data-type='" + attach.fileType + "'>";
					str += "	<div>";
					str += "		<img src='/display?fileName=" + fileCallPath + "'>";
					str += "	</div>";
					str += "</li>";
					
				} else {
										
					str += "<li style='cursor:pointer' data-path='" + attach.uploadPath + "' data-uuid='" + attach.uuid + "' data-filename='" + attach.fileName + "' data-type='" + attach.fileType + "'>";
					str += "	<div>";
					str += "		<span>" + attach.fileName + "</span><br/>";
					str += "		<img src='/resources/img/attach.png'>";
					str += "	</div>";
					str += "</li>";
				}
			});
			
			$(".uploadResult ul").html(str);
			
		});  // end getJSON
		
	})();  // end function
	
	
	function showImage(fileCallPath) {
		
		console.log(fileCallPath);
		
		$(".bigPictureWrapper").css("display", "flex").show();
		
		$(".bigPicture").html("<img src='/display?fileName=" + fileCallPath + "'>").animate({width:'100%', height:'100%'}, 800);
	}
	
	$(".uploadResult").on("click", "li", function(e) {
		
		console.log("view image");
		
		var liObj = $(this);
		
		var path = encodeURIComponent(liObj.data("path") + "/" + liObj.data("uuid") + "_" + liObj.data("filename"));
		
		if (liObj.data("type")) {
			showImage(path.replace(new RegExp(/\\/g), "/"));
		} else {
			// download
			self.location = "/download?fileName=" + path;
		}
	});

	$(".bigPictureWrapper").on("click", function(e) {
		
		$(".bigPicture").animate({width:'0%', height:'0%'}, 800);
		setTimeout(function() {
			$(".bigPictureWrapper").hide();
		}, 800);
	});
	
	var pageNum = 1;
	var replyPageFooter = $(".card-footer");
	
	function showReplyPage(replyCnt){
		
		var endNum = Math.ceil(pageNum / 10.0) * 10;  // 끝페이지
		var startNum = endNum - 9;  // 시작페이지
		
		var prev = startNum != 1;  // 이전(prev) 유무(flag). 시작페이지가 1이 아니면 true;
		var next = false;  // 다음(next) 유무(flag)
		
		// 실제 페이지 숫자가 끝페이지 숫자보다 작으면 끝페이지 숫자 변경
		if(endNum * 10 >= replyCnt) {
			endNum = Math.ceil(replyCnt/10.0);
		}
		
		if(endNum * 10 < replyCnt) {
			next = true;
		}
		
		var str = "<ul class='pagination float-right'>";
		
		if(prev) {
			str += "<li class='page-item'>";
			str += "	<a class='page-link' href='" + (startNum -1) + "'>Previous</a>";
			str += "</li>";
		}
		
		for(var i = startNum ; i <= endNum ; i++) {
			
			var active = pageNum == i ? "active" : "";
			
			str += "<li class='page-item " + active + " '>";
			str += "	<a class='page-link' href='" + i + "'>" + i + "</a>";
			str += "</li>";
		}
		
		if(next) {
			
			str += "<li class='page-item'>";
			str += "	<a class='page-link' href='" + (endNum + 1) + "'>Next</a>";
			str += "</li>";
		}
		
		str += "</ul>";
		/* str += "</div>"; */
		
		console.log(str);
		
		replyPageFooter.html(str);
	}
	
	// 댓글 페이징 번호를 클릭시 이벤트 처리(delegate)
	replyPageFooter.on("click", "li a", function(e) {
		
		e.preventDefault();
		
		console.log("page click");
		
		var targetPageNum = $(this).attr("href");
		
		console.log("targetPageNum : " + targetPageNum);
		
		pageNum = targetPageNum;
		
		showList(pageNum);
	});
	
	var bnoValue = '<c:out value="${board.bno}"/>';  // 부모글 번호
	var replyUL = $(".chat");  // 댓글 목록 UL

	
	showList(1);  // 댓글 목록 (1페이지)
	
	
	function showList(page) {
		
		// 댓글 목록
		replyService.getList({bno:bnoValue, page:page || 1}, function(replyCnt, list) {
			
				console.log("replyCnt : " + replyCnt);
				console.log("list : " + list);
				console.log(list);
				
				if(page == -1) {
					pageNum = Math.ceil(replyCnt / 10.0);
					showList(pageNum);
					return;
				}
			
				var str="";
				
				if(list == null || list.length == 0) {					
					return;
				}
				
				for(var i = 0, len = list.length||0; i < len; i++){
					console.log(list[i]);
					str += "<li class='left clearfix list-group-item' style='cursor:pointer' data-rno='" + list[i].rno + "'>";
					str += "	<div>";
					str += "		<div class='header'>";
					str += "			<strong class='text-primary'>" + list[i].replyer + "</strong>";
					str += "			<small class='float-right text-muted'>" + replyService.displayTime(list[i].replyDate) + "</small>";
					str += "		</div>";
					str += "		<p>" + list[i].reply + "</p>";
					str += "	</div>";
					str += "</li>";
				}
				
			replyUL.html(str);  // UL태그에 추가
			
			showReplyPage(replyCnt);  // 댓글 페이징
			
		});  // end function
		
	}  // end showList
	
	
	
	var modal = $(".modal");
	var modalInputReply = modal.find("input[name='reply']");  // 댓글 내용
	var modalInputReplyer = modal.find("input[name='replyer']");  // 댓글 작성자
	var modalInputReplyDate = modal.find("input[name='replyDate']");  // 댓글 작성일
	
	var modalModBtn = $("#modalModBtn");  // 수정 버튼
	var modalRemoveBtn = $("#modalRemoveBtn");  // 삭제 버튼
	var modalRegisterBtn = $("#modalRegisterBtn");  // 등록 버튼
	
	// new Reply 버튼 클릭 시 모달 띄우기
	$("#addReplyBtn").on("click", function(e) {
		
		modal.find("input").val("");  // 입력 항목 초기화
		modalInputReplyDate.closest("div").hide();  // 날짜 숨김
		modal.find("button[id !='modalCloseBtn']").hide();  // 닫기 이외의 버튼 숨김
		
		modalRegisterBtn.show();  // 등록 버튼 보이게
		
		$("#myModal").modal("show");  // 모달창 보이게
		
	});
	
	// Register 버튼 클릭시 댓글 등록
	modalRegisterBtn.on("click", function(e){
		
		var reply = {
				reply: modalInputReply.val(),
				replyer: modalInputReplyer.val(),
				bno: bnoValue
		};
		console.log(reply);
		replyService.add(reply, function(result){
			
			alert(result);
			
			modal.find("input").val();
			modal.modal("hide");
			
			// 목록 갱신
			showList(1);
		});
	});
	
	//댓글 조회 클릭 이벤트 처리 
    $(".chat").on("click", "li", function(e){
      
      var rno = $(this).data("rno");
      
      replyService.get(rno, function(reply){
      
        modalInputReply.val(reply.reply);
        modalInputReplyer.val(reply.replyer);
        modalInputReplyDate.val(replyService.displayTime( reply.replyDate)).attr("readonly","readonly");
        modal.data("rno", reply.rno);
        
        modal.find("button[id !='modalCloseBtn']").hide();
        modalModBtn.show();
        modalRemoveBtn.show();
        
        $(".modal").modal("show");
            
      });
    });
	
	// 댓글 수정
	modalModBtn.on("click", function(e) {
		
		var reply = {rno:modal.data("rno"), reply: modalInputReply.val()};
		
		replyService.update(reply, function(result){
			
			alert(result);
			modal.modal("hide");
			showList(1);
		});
	});
	
	modalRemoveBtn.on("click", function(e) {
		
		var rno = modal.data("rno");
		
		replyService.remove(rno, function(result){
			
			alert(result);
			modal.modal("hide");
			showList(1);
		})
	})
	
	

	var operForm = $("#operForm");
	
	$("button[data-oper='modify']").on("click", function(e){
		
		operForm.attr("action", "/board/modify").submit;
	});
	
	$("button[data-oper='list']").on("click", function(e){
		
		e.preventDefault();
		
		operForm.find("#bno").remove();
		operForm.attr("action", "/board/list");
		operForm.submit();
	});
	
	$("button[data-oper='remove']").on("click", function(e){
		
		e.preventDefault();
		
		if (confirm("삭제하시겠습니까?") == true){    //확인
			operForm.attr("action", "/board/remove");  // action 변경
		} else {
			return;
		}
		operForm.submit();
	});
});
</script>

<!-- <script>
$(document).ready(function() {
	var formObj = $("form");
	
	$('button').on("click", function(e) {
		
		e.preventDefault();
		
		var operation = $(this).data("oper");  // data-oper 속성값을 구함
		console.log(operation);
		
		if(operation === 'remove') {
			if (confirm("삭제하시겠습니까?") == true){    //확인
				formObj.attr("action", "/board/remove");  // action 변경
			} else {
				return;
			}
		}
		formObj.submit();  //  form의 데이터 전송
	})
})
</script> -->